/*
 */

#define CPU_PRESCALE(n) (CLKPR = 0x80, CLKPR = (n))
#define CPU_16MHz       0x00
#define CPU_8MHz        0x01
#define CPU_4MHz        0x02
#define CPU_2MHz        0x03
#define CPU_1MHz        0x04
#define CPU_500kHz      0x05
#define CPU_250kHz      0x06
#define CPU_125kHz      0x07
#define CPU_62kHz       0x08
#define DIVISOR 1

#define F_CPU 16000000L
#define BAUDRATE 9600
#define BAUD_PRESCALLER 103

#include <avr/io.h>
#include <stdlib.h>
#include <util/delay.h>



/**SERIAL COMMUNICATION AND ASSOCIATED FUNCTIONS**/
void USART_init(void){

 UBRR1H = (uint8_t)(BAUD_PRESCALLER>>8);
 UBRR1L = (uint8_t)(BAUD_PRESCALLER);
 UCSR1B = (1<<RXEN1)|(1<<TXEN1);
 UCSR1C = ((1<<UCSZ10)|(1<<UCSZ11));
}

//receive character
unsigned char USART_receive(void){

    while(!(UCSR1A & (1<<RXC1)));
    DDRD |= (1<<6);
    PORTD ^= (1<<6);
	return UDR1;
}

//send character
void USART_send( unsigned char data){

    while (!(UCSR1A & (1 << UDRE1)));
	UDR1 = data;

}

//send a string of characters
void printStr(char* data){

    uint8_t i=0;
    //send each character until we hit the end of the string
    while(data[i] != '\0'){
        USART_send(data[i]);
        i++;
    }
}

/*this function prints out an integer to the computer terminal,
  converts the numbers into their counterpart characters*/
void printNum(uint16_t num, int digits){

    int i=1;
    char str[digits];
    //convert to char array
    for(i=1;i<=digits;i++){
        str[digits-i] = (char)(num%10 + '0');
        num/=10;
    }
    //send it through serial
    for(i=0; i<digits; i++){
        USART_send(str[i]);
    }
}

/**INITIALIZE**/
void init(){

    //set up pins
    DDRD = 0b11111111;
    DDRF = 0B00000000;
	//set up the cpu prescale
	CPU_PRESCALE(CPU_16MHz);
	//USART
	USART_init();
}

/**GET INPUT FROM BUTTON**/
int read_button(){

    //check if pin F0 is low (low is active)
    if((PINF & (1<<PF0)) == 0){
        return 1;
    }
    return 0;
}

int main(void)
{

    int button_state = 1;
    //initialize
    init();

    while(1){
        //if the button is pressed, send an 'a' to the microcontroller
        if(read_button()){
            USART_send('a');
        }
        //delay so that the signal isn't sent a bunch of times
        _delay_ms(100);
    }

    return 0;
}